# Generated by Django 5.2.6 on 2025-10-24 03:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('research', '0002_remove_experiment_project_remove_milestone_project_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('field', models.CharField(choices=[('ai', 'AI & Machine Learning'), ('physics', 'Physics'), ('mathematics', 'Mathematics'), ('engineering', 'Engineering'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('objectives', models.TextField(help_text='Tujuan penelitian')),
                ('methodology', models.TextField(blank=True, help_text='Metode yang digunakan')),
                ('hypothesis', models.TextField(blank=True, help_text='Hipotesis (jika ada)')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('target_duration_days', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='planning', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('progress_percentage', models.IntegerField(default=0, help_text='0-100%')),
                ('findings', models.TextField(blank=True, help_text='Temuan penelitian')),
                ('conclusions', models.TextField(blank=True, help_text='Kesimpulan')),
                ('future_work', models.TextField(blank=True, help_text='Penelitian lanjutan')),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('supervisor', models.CharField(blank=True, max_length=200)),
                ('collaborators', models.TextField(blank=True, help_text='Kolaborator (pisah dengan koma)')),
                ('data_schema', models.JSONField(blank=True, default=dict, help_text='Schema untuk data entry')),
                ('is_public', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Research Project',
                'verbose_name_plural': 'Research Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('general', 'General'), ('idea', 'Idea'), ('observation', 'Observation'), ('problem', 'Problem'), ('solution', 'Solution'), ('reference', 'Reference')], default='general', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Tags pisah dengan koma', max_length=200)),
                ('is_important', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='research/notes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-is_important', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('setup_details', models.TextField(blank=True, help_text='Setup eksperimen')),
                ('materials', models.TextField(blank=True, help_text='Material yang digunakan')),
                ('procedure', models.TextField(blank=True, help_text='Prosedur eksperimen')),
                ('planned_date', models.DateField(blank=True, null=True)),
                ('execution_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='planned', max_length=20)),
                ('observations', models.TextField(blank=True)),
                ('results', models.TextField(blank=True)),
                ('analysis', models.TextField(blank=True)),
                ('measurements', models.JSONField(blank=True, default=dict)),
                ('success_rate', models.IntegerField(blank=True, help_text='0-100%', null=True)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='research/experiments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Experiment',
                'verbose_name_plural': 'Experiments',
                'ordering': ['-execution_date'],
            },
        ),
        migrations.CreateModel(
            name='DataEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('days_from_start', models.FloatField(editable=False, help_text='Auto-calculated')),
                ('data', models.JSONField(default=dict, help_text='Data measurements dalam format JSON')),
                ('data_quality', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.CharField(blank=True, help_text='Tags pisah dengan koma', max_length=200)),
                ('is_validated', models.BooleanField(default=False)),
                ('is_outlier', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='research/data/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_entries', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Data Entry',
                'verbose_name_plural': 'Data Entries',
                'ordering': ['entry_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('paper', 'Research Paper'), ('dataset', 'Dataset'), ('tool', 'Tool/Software'), ('book', 'Book'), ('video', 'Video Tutorial'), ('website', 'Website'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier', max_length=200)),
                ('authors', models.CharField(blank=True, max_length=500)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('citation', models.TextField(blank=True, help_text='Full citation')),
                ('file', models.FileField(blank=True, null=True, upload_to='research/resources/')),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('is_key_resource', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['-is_key_resource', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('blocked', 'Blocked')], default='todo', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('assigned_to', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['-priority', 'due_date'],
            },
        ),
    ]
