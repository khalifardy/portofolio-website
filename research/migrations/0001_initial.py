# Generated by Django 5.2.6 on 2025-10-22 09:11

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('field', models.CharField(choices=[('ai', 'AI & Machine Learning'), ('physics', 'Physics'), ('math', 'Mathematics'), ('engineering', 'Engineering')], max_length=20)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='planning', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('estimated_duration_days', models.IntegerField(blank=True, help_text='Estimated duration in days', null=True)),
                ('hypothesis', models.TextField(blank=True, help_text='Research hypothesis or main question')),
                ('objectives', models.TextField(blank=True, help_text='Research objectives (one per line)')),
                ('methodology', models.TextField(blank=True, help_text='Research methodology')),
                ('findings', models.TextField(blank=True)),
                ('conclusions', models.TextField(blank=True)),
                ('future_work', models.TextField(blank=True)),
                ('collaborators', models.TextField(blank=True, help_text='Collaborators (comma-separated)')),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('repository_url', models.URLField(blank=True, help_text='GitHub/GitLab repository')),
                ('paper_url', models.URLField(blank=True, help_text='Published paper URL')),
                ('presentation_url', models.URLField(blank=True, help_text='Presentation/slides URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Research Project',
                'verbose_name_plural': 'Research Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='research.researchproject')),
            ],
            options={
                'ordering': ['-is_important', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_date', models.DateField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='research.researchproject')),
            ],
            options={
                'ordering': ['target_date'],
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='planned', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Experiment parameters (JSON)')),
                ('results', models.JSONField(blank=True, default=dict, help_text='Experiment results (JSON)')),
                ('metrics', models.JSONField(blank=True, default=dict, help_text='Performance metrics (JSON)')),
                ('success', models.BooleanField(blank=True, null=True)),
                ('observations', models.TextField(blank=True)),
                ('next_steps', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='research.researchproject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('data', models.JSONField(help_text='Flexible JSON data storage')),
                ('data_type', models.CharField(blank=True, help_text='e.g., training_metrics, experiment_results', max_length=100)),
                ('quality', models.IntegerField(choices=[(5, 'Excellent'), (4, 'Good'), (3, 'Average'), (2, 'Poor'), (1, 'Unusable')], default=3)),
                ('is_validated', models.BooleanField(default=False)),
                ('is_outlier', models.BooleanField(default=False)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('days_from_start', models.FloatField(blank=True, editable=False, null=True)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(blank=True, help_text='Data source or method', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_entries', to='research.researchproject')),
            ],
            options={
                'verbose_name': 'Data Entry',
                'verbose_name_plural': 'Data Entries',
                'ordering': ['recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('paper', 'Research Paper'), ('book', 'Book'), ('dataset', 'Dataset'), ('tool', 'Tool/Software'), ('code', 'Code Repository'), ('website', 'Website/Blog'), ('video', 'Video/Tutorial'), ('other', 'Other')], max_length=20)),
                ('url', models.URLField(blank=True)),
                ('authors', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this resource')),
                ('file', models.FileField(blank=True, null=True, upload_to='research/resources/')),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='research.researchproject')),
            ],
            options={
                'ordering': ['-is_favorite', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('blocked', 'Blocked')], default='todo', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='research.researchproject')),
            ],
            options={
                'ordering': ['due_date', '-priority', 'created_at'],
            },
        ),
    ]
