# Generated by Django 5.2.6 on 2025-09-13 14:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('astronomy', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='astrophoto',
            options={'ordering': ['-capture_date', 'exact_time']},
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='ambient_temperature',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Temperature at time of capture', max_digits=4, null=True),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='eclipse_phase',
            field=models.CharField(blank=True, choices=[('', 'Not Eclipse/Regular'), ('pre', 'Pre-Eclipse'), ('post', 'Post-Eclipse'), ('lunar_p1', 'Lunar - Penumbral Start'), ('lunar_u1', 'Lunar - Partial Start'), ('lunar_u2', 'Lunar - Total Start'), ('lunar_max', 'Lunar - Maximum'), ('lunar_u3', 'Lunar - Total End'), ('lunar_u4', 'Lunar - Partial End'), ('lunar_p2', 'Lunar - Penumbral End'), ('solar_c1', 'Solar - First Contact'), ('solar_c2', 'Solar - Second Contact (Total/Annular Start)'), ('solar_max', 'Solar - Maximum'), ('solar_c3', 'Solar - Third Contact (Total/Annular End)'), ('solar_c4', 'Solar - Fourth Contact'), ('solar_diamond1', 'Solar - First Diamond Ring'), ('solar_diamond2', 'Solar - Second Diamond Ring'), ('solar_baileys', 'Solar - Baileys Beads'), ('solar_chromosphere', 'Solar - Chromosphere'), ('solar_corona', 'Solar - Corona (Totality)'), ('solar_prominence', 'Solar - Prominences'), ('solar_shadow_bands', 'Solar - Shadow Bands'), ('composite', 'Composite/Montage'), ('sequence', 'Time Sequence')], help_text='Phase of eclipse when photo taken ', max_length=20),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='exact_time',
            field=models.DateTimeField(blank=True, help_text='Exact time of capture', null=True),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='filter_used',
            field=models.CharField(blank=True, help_text='Specific filter model/type used', max_length=100),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='frame_count',
            field=models.IntegerField(blank=True, help_text='Number of frames if composite', null=True),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='hdr_brackets',
            field=models.CharField(blank=True, help_text='HDR bracket range (e.g., -2, 0, +2 EV)', max_length=100),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='is_composite',
            field=models.BooleanField(default=False, help_text='Is this a composite/stacked image?'),
        ),
        migrations.AddField(
            model_name='astrophoto',
            name='solar_photo_method',
            field=models.CharField(blank=True, choices=[('', 'N/A'), ('direct_filtered', 'Direct with Solar Filter'), ('projection', 'Projection Method'), ('h_alpha', 'H-Alpha Filter'), ('calcium_k', 'Calcium-K Filter'), ('white_light', 'White Light Filter'), ('coronagraph', 'Coronagraph')], help_text='Method used for solar photography', max_length=20),
        ),
        migrations.CreateModel(
            name='EclipseObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eclipse_type', models.CharField(choices=[('lunar_total', 'Lunar - Total'), ('lunar_partial', 'Lunar - Partial'), ('lunar_penumbral', 'Lunar - Penumbral'), ('solar_total', 'Solar - Total'), ('solar_partial', 'Solar - Partial'), ('solar_annular', 'Solar - Annular'), ('solar_hybrid', 'Solar - Hybrid')], max_length=20)),
                ('safety_equipment', models.CharField(blank=True, choices=[('', 'Not Applicable'), ('solar_filter', 'Solar Filter'), ('eclipse_glasses', 'Eclipse Glasses'), ('welding_glass', 'Welding Glass #14'), ('mylar', 'Mylar Filter'), ('thousand_oaks', 'Thousand Oaks Solar Filter'), ('baader', 'Baader AstroSolar'), ('projection', 'Projection Method')], help_text='Critical for solar eclipses', max_length=30)),
                ('c1_time', models.DateTimeField(blank=True, null=True, verbose_name='First Contact')),
                ('c2_time', models.DateTimeField(blank=True, null=True, verbose_name='Second Contact')),
                ('max_time', models.DateTimeField(blank=True, null=True, verbose_name='Maximum Eclipse')),
                ('c3_time', models.DateTimeField(blank=True, null=True, verbose_name='Third Contact')),
                ('c4_time', models.DateTimeField(blank=True, null=True, verbose_name='Fourth Contact')),
                ('p1_time', models.DateTimeField(blank=True, null=True, verbose_name='Penumbra Start')),
                ('u1_time', models.DateTimeField(blank=True, null=True, verbose_name='Umbra Start')),
                ('u2_time', models.DateTimeField(blank=True, null=True, verbose_name='Total Start')),
                ('u3_time', models.DateTimeField(blank=True, null=True, verbose_name='Total End')),
                ('u4_time', models.DateTimeField(blank=True, null=True, verbose_name='Umbra End')),
                ('p2_time', models.DateTimeField(blank=True, null=True, verbose_name='Penumbra End')),
                ('magnitude', models.DecimalField(blank=True, decimal_places=3, help_text='Eclipse magnitude (0-1 for partial, > for total)', max_digits=5, null=True)),
                ('obscuration', models.DecimalField(blank=True, decimal_places=2, help_text="Percentage of sun's area covered", max_digits=5, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, help_text='Duration of totality/annularity in seconds', null=True)),
                ('temperatur_drop', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature drop in Celsius', max_digits=4, null=True)),
                ('shadow_bands_observed', models.BooleanField(default=False)),
                ('shadow_bands_notes', models.TextField(blank=True)),
                ('bailes_beads_observed', models.BooleanField(default=False)),
                ('diamond_ring_observed', models.BooleanField(default=False)),
                ('corona_shape', models.CharField(blank=True, max_length=100)),
                ('corona_extent', models.CharField(blank=True, max_length=100)),
                ('prominences_observed', models.BooleanField(default=False)),
                ('prominences_notes', models.TextField(blank=True)),
                ('animal_behaviour_notes', models.TextField(blank=True, help_text='Notable animal/bird behavior during eclipse')),
                ('weather_impact', models.TextField(blank=True)),
                ('viewing_success', models.IntegerField(blank=True, help_text='Success rate 0-100%', null=True)),
                ('observation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='eclipse_data', to='astronomy.observationlog')),
            ],
            options={
                'ordering': ['-observation__observation_date'],
            },
        ),
    ]
